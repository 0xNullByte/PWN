const WORDS = [
	'electrotheraputically',
	'enterocholecystostomy',
	'establishmentarianism',
	'flareonisallaboutcats',
	'gastroenterocolostomy',
	'gastroenterologically',
	'glossolabiopharyngeal',
	'hepaticoenterostomies',
	'heterotransplantation',
	'hexachlorocyclohexane',
	'hydrodesulphurization',
	'hydroxycorticosterone',
	'hyperaggressivenesses',
	'hyperconservativeness',
	'hyperconstitutionally',
	'hyperenthusiastically',
	'hyperintellectualness',
	'hyperpolysyllabically',
	'hypsidolichocephalism',
	'historicogeographical',
	'historicophilosophica',
	'humuhumunukunukuapuaa',
	'immunoelectrophoresis',
	'immunoelectrophoretic',
	'indistinguishableness',
	'intellectualistically',
	'internationalizations',
	'intertransformability',
	'isopropylideneacetone',
	'labioglossopharyngeal',
	'magnetofluidmechanics',
	'magnetoplasmadynamics',
	'mandibulosuspensorial',
	'mechanicointellectual',
	'mechanotheraputically',
	'membranocartilaginous',
	'methyltrinitrobenzene',
	'microcolorimetrically',
	'microminiaturizations',
	'microradiographically',
	'microseismometrograph',
	'nitrotrichloromethane',
	'nonautobiographically',
	'noncharacteristically',
	'nonimpressionableness',
	'noninterchangeability',
	'nonpsychoanalytically',
	'nonrepresentativeness',
	'otorhinolaryngologist',
	'overargumentativeness',
	'overcommercialization',
	'overconscientiousness',
	'overgesticulativeness',
	'overimpressionability',
	'overindividualization',
	'overindustrialization',
	'overintellectualizing',
	'oversuperstitiousness',
	'palaeodendrologically',
	'pancreatoduodenectomy',
	'parathyroidectomizing',
	'pathologicoanatomical',
	'pentamethylenediamine',
	'pharyngoepiglottidean',
	'pharmacoendocrinology',
	'phenylethylmalonylure',
	'philosophicoreligious',
	'phoneticohieroglyphic',
	'phosphoglyceraldehyde',
	'photochromolithograph',
	'photolithographically',
	'photomicrographically',
	'phthalylsulfathiazole',
	'platydolichocephalous',
	'poliencephalomyelitis',
	'poluphloisboiotatotic',
	'prostatovesiculectomy',
	'protransubstantiation',
	'pseudoanachronistical',
	'pseudoanthropological',
	'pseudohermaphroditism',
	'pseudolamellibranchia',
	'pseudoparthenogenesis',
	'pseudophilanthropical',
	'psychopharmacological',
	'psychophysiologically',
	'psychotherapeutically',
	'representationalistic',
	'scientificohistorical',
	'scleroticochoroiditis',
	'selectivitysenescence',
	'semianthropologically',
	'sphygmomanometrically',
	'stereomicroscopically',
	'stereophotomicrograph',
	'stereoroentgenography',
	'succinylsulfathiazole',
	'superconservativeness',
	'superconstitutionally',
	'superincomprehensible',
	'superincomprehensibly',
	'supertranscendentness',
	'tessarescaedecahedron',
	'tetrabromofluorescein',
	'thermophosphorescence',
	'transcendentalisation',
	'transcendentalization',
	'transubstantiationite',
	'triacetyloleandomycin',
	'trichloroacetaldehyde',
	'trichloronitromethane',
	'uncontemporaneousness',
	'undistinguishableness',
	'unstraightforwardness',
	'ureteropyelonephritis',
	'zygomaticoauricularis',
	]
Keyboard = {}

// replace it with new object for every try.
correct  = {"1":"l","3":"r","4":"e","5":"o","7":"i","8":"s","9":"a","10":"l","11":"l","12":"a","14":"o","15":"u","16":"t","18":"a","19":"t","20":"s"}

function AddLetter(numOfletter){
  document.getElementsByClassName("keyboard-button")[numOfletter].click()
}

function makeKeyBoard(){
   keyS = document.getElementsByClassName("keyboard-button");
   for(i=0; i < keyS.length; i++)
   { Keyboard[keyS[i].textContent] = i }
}


function init(){
    for(i = 0; i < WORDS.length; i++){
         for(j = 0; j < WORDS[i].length; j++){
            AddLetter(Keyboard[WORDS[i][j]])
        }
        AddLetter(Keyboard["Enter"])
    }
}

function getColors(){
    for(row = 0; row < 6; row++){
       for(col = 0; col < 21; col++){
       color = document.getElementsByClassName("letter-row")[row].children[col].style.backgroundColor
       Letter = document.getElementsByClassName("letter-row")[row].children[col].textContent
       if(color == "green"){correct[col] = Letter }
     }
    }
 }

 function getCorrectLenght(){
   c = 0;
   for(i in correct) {c++};
   return c.toString();
}

function getFlag(){
    flag = ""
    for (i in correct) { flag += correct[i] };
    return flag + "@flare-on.com"
}

function getInfo(){
    getColors()

    console.log(correct);
    console.log("Correct length: " + getCorrectLenght())
    console.log("flag:" + getFlag())  
}

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

function start(){
  makeKeyBoard()
  init()
  // ( 0.3(second) * 21(row) ) / 1000 = 6300(ms)
  sleep(6300).then(() => { getInfo(); });
}


/*
	flag : flareonisallaboutcats@flare-on.com
	usage:
		- copy/paste : `console DevTools`
		- call start()
*/